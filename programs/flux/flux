#!/bin/bash

# Function to echo colored text
function echo_color() {
  local text=$1
  local color_code=$2
  local reset="\e[0m"
  echo -e "${color_code}${text}${reset}"
}

# Function to echo colored command status
function echo_command() {
  local command_name=$1
  local color_code=$2
  local reset="\e[0m"
  echo -e -n "${color_code}RUNNING ${reset}${command_name}"
}

# Function to echo command errors
function echo_error() {
  local error_message=$1
  local reset="\e[0m"
  echo -e "${reset}${error_message}"
}

# Check if argument is provided
if [[ $1 == "-s" ]]; then
  # Run git fetch
  echo_command "Fetch" "\e[1;32m"
  if ! git fetch >/dev/null 2>&1; then
    echo_error "Error: Failed to fetch changes from remote repository."
    exit 1
  fi
  echo

  # Run git pull
  echo_command "Pull" "\e[1;32m"
  if ! git pull >/dev/null 2>&1; then
    echo_error "Error: Failed to pull changes from remote repository."
    exit 1
  fi
  echo

  # Run git status
  echo_command "Status" "\e[1;32m"
  git status --porcelain | awk '$1 != "??"{print $0}'
  echo

  # Run git add -A
  echo_command "Add" "\e[1;32m"
  if ! git add -A >/dev/null 2>&1; then
    echo_error "Error: Failed to add changes to the staging area."
    exit 1
  fi
  echo

  # Run git commit -a
  echo_command "Commit" "\e[1;32m"
  echo -n -e "\n\e[0mEnter the commit message: "
  read commit_message
  if ! git commit -a -m "$commit_message" >/dev/null 2>&1; then
    echo_error "Error: Failed to commit changes."
    exit 1
  fi
  echo

  # Run git push origin
  echo_command "Pushing" "\e[1;32m"
  if ! git push origin >/dev/null 2>&1; then
    echo_error "Error: Failed to push changes to remote repository."
    exit 1
  fi
  echo

else
  # Run git status
  echo_command "Status" "\e[1;32m"
  git status --porcelain | awk '$1 != "??"{print $0}'
  echo

  # Run git add -A
  echo_command "Add" "\e[1;32m"
  if ! git add -A >/dev/null 2>&1; then
    echo_error "Error: Failed to add changes to the staging area."
    exit 1
  fi
  echo

  # Run git commit -a
  echo_command "Commit" "\e[1;32m"
  echo -n -e "\n\e[0mEnter the commit message: "
  read commit_message
  if ! git commit -a -m "$commit_message" >/dev/null 2>&1; then
    echo_error "Error: Failed to commit changes."
    exit 1
  fi
  echo

  # Run git push origin
  echo_command "Pushing" "\e[1;32m"
  if ! git push origin >/dev/null 2>&1; then
    echo_error "Error: Failed to push changes to remote repository."
    exit 1
  fi
  echo
fi

# Run git status
echo_command "Status" "\e[1;32m"
git status --porcelain | awk '$1 != "??"{print $0}'
echo

# Print "DONE" indicator in red and bold
echo_color "DONE" "\e[1;31m"
