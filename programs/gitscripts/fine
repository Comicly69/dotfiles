#!/bin/bash

# Function to echo colored text
function echo_color() {
  local text=$1
  local color_code=$2
  local reset="\e[0m"
  echo -e "${color_code}${text}${reset}"
}

# Function to echo colored command status
function echo_command() {
  local command_name=$1
  local color_code=$2
  local reset="\e[0m"
  echo_color "RUNNING" "${color_code}"
  echo_color "${command_name}" "${reset}"
}

# Function to echo colored command status with additional message
function echo_command_with_message() {
  local command_name=$1
  local color_code=$2
  local message=$3
  local reset="\e[0m"
  echo_color "RUNNING" "${color_code}"
  echo_color "${command_name}" "${reset}"
  echo_color "${message}" "${reset}"
}

# Check if argument is provided
if [[ $1 == "-s" ]]; then
  # Run git fetch
  echo_command "Fetch" "\e[1;32m"
  git fetch >/dev/null 2>&1

  # Run git pull
  echo_command "Pull" "\e[1;32m"
  git pull >/dev/null 2>&1

  # Run git add -A
  echo_command "Add" "\e[1;32m"
  git add -A >/dev/null 2>&1

  # Run git commit -a
  echo_command "Commit" "\e[1;32m"
  echo -e "{b, white}Enter the commit message:"
  read commit_message
  git commit -a -m "$commit_message" >/dev/null 2>&1

  # Run git push origin
  echo_command "Pushing" "\e[1;32m"
  git push origin >/dev/null 2>&1
else
  # Run git add -A
  echo_command "Add" "\e[1;32m"
  git add -A >/dev/null 2>&1

  # Run git commit -a
  echo_command "Commit" "\e[1;32m"
  echo -e "{b, white}Enter the commit message:"
  read commit_message
  git commit -a -m "$commit_message" >/dev/null 2>&1

  # Run git push origin
  echo_command "Pushing" "\e[1;32m"
  git push origin >/dev/null 2>&1
fi
